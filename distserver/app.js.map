{
  "version": 3,
  "sources": ["../server/app.ts"],
  "sourcesContent": ["import express from 'express';\r\nimport { Application } from 'express';\r\nimport path from 'path';\r\nexport default class App {\r\n  app: Application;\r\n  port: number;\r\n\r\n  constructor(settings: { port: number; middleWares: any; controllers: any }) {\r\n    this.app = express();\r\n    this.port = settings.port;\r\n\r\n    this.middlewares(settings.middleWares);\r\n    this.routes(settings.controllers);\r\n    this.assets();\r\n  }\r\n\r\n  listen() {\r\n    this.app.listen(this.port, () => {\r\n      console.log(`App listening on http://localhost:${this.port}`);\r\n    });\r\n  }\r\n\r\n  private middlewares(mws: any[]) {\r\n    mws.forEach((mw) => {\r\n      this.app.use(mw);\r\n    });\r\n  }\r\n\r\n  private routes(ctrls: any[]) {\r\n    ctrls.forEach((ctrl) => {\r\n      this.app.use('/', ctrl.router);\r\n    });\r\n  }\r\n\r\n  private assets() {\r\n    this.app.use(express.static(path.join(__dirname, '../dist')));\r\n  }\r\n\r\n  private onError() {\r\n    this.app.on('error', () => {\r\n      console.error('app error', this.app.stack);\r\n      // @ts-ignore\r\n      console.error('on url', this.app.request.url || '');\r\n      // @ts-ignore\r\n      console.error('with headers', this.app.request.header || '');\r\n    });\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,qBAAoB;AAEpB,kBAAiB;AAFjB;AAAA,EAOE,YAAY;AACV,SAAK,MAAM;AACX,SAAK,OAAO,SAAS;AAErB,SAAK,YAAY,SAAS;AAC1B,SAAK,OAAO,SAAS;AACrB,SAAK;AAAA;AAAA,EAGP;AACE,SAAK,IAAI,OAAO,KAAK,MAAM;AACzB,cAAQ,IAAI,qCAAqC,KAAK;AAAA;AAAA;AAAA,EAIlD,YAAY;AAClB,QAAI,QAAQ,CAAC;AACX,WAAK,IAAI,IAAI;AAAA;AAAA;AAAA,EAIT,OAAO;AACb,UAAM,QAAQ,CAAC;AACb,WAAK,IAAI,IAAI,KAAK,KAAK;AAAA;AAAA;AAAA,EAInB;AACN,SAAK,IAAI,IAAI,uBAAQ,OAAO,oBAAK,KAAK,WAAW;AAAA;AAAA,EAG3C;AACN,SAAK,IAAI,GAAG,SAAS;AACnB,cAAQ,MAAM,aAAa,KAAK,IAAI;AAEpC,cAAQ,MAAM,UAAU,KAAK,IAAI,QAAQ,OAAO;AAEhD,cAAQ,MAAM,gBAAgB,KAAK,IAAI,QAAQ,UAAU;AAAA;AAAA;AAAA;",
  "names": []
}
